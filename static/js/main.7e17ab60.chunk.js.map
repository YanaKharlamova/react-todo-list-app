{"version":3,"sources":["components/Button/ProjectButton.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ProjectButton","icon","handleActionOnClick","Button","className","cn","onClick","Icon","name","Todo","todos","setTodos","filteredTodo","handleCompleteTodo","map","el","id","completed","todoStylesClasses","key","value","newArrTodos","filter","TodoList","filteredTodos","Filter","setFilterType","filterOptions","Math","random","text","Select","onChange","e","target","innerText","placeholder","options","App","useState","todo","setTodo","setFilteredTodos","filterType","useEffect","getTodosFromLocalStorage","filterTodosHandler","saveTodosToLocalStorage","localStorage","getItem","setItem","JSON","stringify","localStorageTodos","parse","onSubmit","preventDefault","action","Input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e17ab60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport cn from \"classnames\";\r\nimport \"./ProjectButton.scss\";\r\n\r\nconst ProjectButton = ({ icon, handleActionOnClick }) => {\r\n  return (\r\n    <Button\r\n      className={cn([\"todo-button\", `todo-button--${icon}`])}\r\n      onClick={handleActionOnClick}\r\n    >\r\n      <Icon name={icon} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ProjectButton;\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport \"./Todo.scss\";\r\nimport ProjectButton from \"../Button/ProjectButton\";\r\n\r\nconst Todo = ({ todos, setTodos, filteredTodo }) => {\r\n  const handleDeleteTodo = () => {\r\n    const newArrTodos = todos.filter((el) => el.id !== filteredTodo.id);\r\n    setTodos(newArrTodos);\r\n  };\r\n  const handleCompleteTodo = () => {\r\n    setTodos(\r\n      todos.map((el) => {\r\n        if (el.id === filteredTodo.id) {\r\n          return {\r\n            ...el,\r\n            completed: !el.completed,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n  //   styles:\r\n  const todoStylesClasses = cn([\r\n    \"todo\",\r\n    { \"todo--completed\": filteredTodo.completed },\r\n  ]);\r\n  return (\r\n    <>\r\n      <div className={todoStylesClasses} key={filteredTodo.id}>\r\n        <span>{filteredTodo.value}</span>\r\n        <div>\r\n          <ProjectButton\r\n            onClick={handleCompleteTodo}\r\n            icon={\"check\"}\r\n            handleActionOnClick={handleCompleteTodo}\r\n          >\r\n            Complete todo\r\n          </ProjectButton>\r\n          <ProjectButton handleActionOnClick={handleDeleteTodo} icon={\"delete\"}>\r\n            Delete todo\r\n          </ProjectButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {filteredTodos.map((filteredTodo) => (\r\n        <Todo\r\n          key={filteredTodo.id}\r\n          filteredTodo={filteredTodo}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { Select } from \"semantic-ui-react\";\r\n\r\nconst Filter = ({ setFilterType }) => {\r\n  const filterOptions = [\r\n    { key: Math.random(), value: \"All\", text: \"All\" },\r\n    { key: Math.random(), value: \"Completed\", text: \"Completed\" },\r\n    { key: Math.random(), value: \"Uncompleted\", text: \"Uncompleted\" },\r\n  ];\r\n  const handleChange = (e) => {\r\n    setFilterType(e.target.innerText);\r\n  };\r\n  return (\r\n    <div>\r\n      <Select\r\n        onChange={handleChange}\r\n        placeholder=\"filter\"\r\n        options={filterOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport ProjectButton from \"./components/Button/ProjectButton\";\r\nimport \"./components/Todo/Todo.scss\";\r\n\r\nfunction App() {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [filterType, setFilterType] = useState(\"All\");\r\n  // get todos that already are in local storage, when you load the page:\r\n  useEffect(() => {\r\n    getTodosFromLocalStorage();\r\n  }, []);\r\n  useEffect(() => {\r\n    const filterTodosHandler = () => {\r\n      switch (filterType) {\r\n        case \"Completed\":\r\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n          break;\r\n        case \"Uncompleted\":\r\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\r\n          break;\r\n        default:\r\n          setFilteredTodos(todos);\r\n          break;\r\n      }\r\n    };\r\n    filterTodosHandler();\r\n    //set (new) todos to localStorage:\r\n    saveTodosToLocalStorage();\r\n  }, [todos, filterType]);\r\n\r\n  const handleInput = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        value: todo,\r\n        id: Math.random(),\r\n        completed: false,\r\n      },\r\n    ]);\r\n    setTodo(\"\");\r\n  };\r\n  const getTodosFromLocalStorage = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      const localStorageTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(localStorageTodos);\r\n    }\r\n  };\r\n  const saveTodosToLocalStorage = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <header>Todo List</header>\r\n        <div className=\"container-navigation\">\r\n          <form\r\n            className=\"container-navigation-input\"\r\n            onSubmit={handleSubmit}\r\n            action=\"input-field\"\r\n          >\r\n            <Input\r\n              placeholder=\"Search...\"\r\n              value={todo}\r\n              onChange={handleInput}\r\n            />\r\n            <ProjectButton icon={\"add\"} />\r\n          </form>\r\n          <Filter setFilterType={setFilterType} />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          filteredTodos={filteredTodos}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}